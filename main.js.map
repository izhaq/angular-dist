{"version":3,"sources":["./src/app/containers/dashboard/dashboard.component.ts","./src/app/containers/dashboard/dashboard.component.html","./src/app/store/user/actions.ts","./src/app/store/login/actions.ts","./src/app/store/user/reducers.ts","./src/app/components/table/table.component.ts","./src/app/components/table/table.component.html","./src/environments/environment.ts","./src/app/base/auth-base/auth.guard.ts","./src/app/store/reducers.main.ts","./src/app/services/api.service.ts","./src/app/store/login/effects.ts","./src/app/facades/login.facade.service.ts","./src/app/store/user/effects.ts","./src/app/store/effects.main.ts","./src/app/containers/navigation-bar/navigation-bar.component.ts","./src/app/containers/navigation-bar/navigation-bar.component.html","./src/app/components/section/section.component.ts","./src/app/components/section/section.component.html","./src/app/services/error-message.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/containers/login/login.component.ts","./src/app/containers/login/login.component.html","./src/app/containers/users/users.component.ts","./src/app/containers/users/users.component.html","./src/app/app.module.ts","./src/app/store/login/reducers.ts","./src/app/store/user/interfaces.ts","./src/app/base/auth-base/api.interceptor.ts","./src/app/facades/user.facade.service.ts","./src/app/store/login/interfaces.ts","./src/app/app-routing.module.ts","./src/app/containers/signup/signup.component.ts","./src/app/containers/signup/signup.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {UserFacadeService} from '../../facades/user.facade.service';\nimport {UserProfile} from '../../store/user/interfaces';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(private userFacade: UserFacadeService) { }\n\n  ngOnInit(): void {\n  }\n\n  get selectedUser(): Observable<UserProfile> {\n    return this.userFacade.getSelectedUser();\n  }\n\n}\n","<app-section>\n  <div class=\"section-header\" header>\n    User Profile - {{(selectedUser | async)!.firstName.toUpperCase()}}\n  </div>\n  <div body *ngIf=\"(selectedUser | async) as user\">\n    <div class=\"details-container\">\n      <fa-icon icon=\"user\" size=\"10x\"></fa-icon>\n      <div class=\"details\">\n        <div class=\"detail-item\">\n          <div class=\"lbl\">First Name</div>\n          <div class=\"value\">{{user.firstName}}</div>\n        </div>\n        <div class=\"detail-item\">\n          <div class=\"lbl\">Last Name</div>\n          <div class=\"value\">{{user.lastName}}</div>\n        </div>\n        <div class=\"detail-item\">\n          <div class=\"lbl\">Email</div>\n          <div class=\"value\">{{user.email}}</div>\n        </div>\n        <div class=\"detail-item\">\n          <div class=\"lbl\">Age</div>\n          <div class=\"value\">{{user.age}}</div>\n        </div>\n        <div class=\"detail-item\">\n          <div class=\"lbl\">Id</div>\n          <div class=\"value\">{{user.id}}</div>\n        </div>\n      </div>\n    </div>\n  </div>\n</app-section>\n","import { createAction, props } from '@ngrx/store';\nimport {UsersTypesNames, Users, UserProfile} from './interfaces';\n\n/** Action to fetch all users */\nexport const getUsers = createAction(UsersTypesNames.GET_USERS);\n\n/** Action to set users in store */\nexport const setUsers = createAction(UsersTypesNames.SET_USERS, props<{ users: Users }>());\n\n/** Action to fetch user full profile*/\nexport const getUser = createAction(UsersTypesNames.GET_USER_PROFILE, props<{ id: string }>());\n\n/** Action to set user in store */\nexport const setUser = createAction(UsersTypesNames.SET_USER_PROFILE, props<{ user: UserProfile }>());\n\n/** Action to save new user */\nexport const saveUser = createAction(UsersTypesNames.SAVE_USER_PROFILE, props<{ user: Partial<UserProfile> }>());\n\n/** Action to set user in store */\nexport const setSelectedUser = createAction(UsersTypesNames.SET_SELECTED_USER, props<{ user: UserProfile }>());\n","import {ActionCreator, ActionType, createAction, props} from '@ngrx/store';\nimport {Credentials, LoginTypesNames} from './interfaces';\n\n/** Action to log in the User from the Login Page */\nexport const login = createAction(LoginTypesNames.LOGIN, props<{ email: string, password: string }>());\n\n/** Action to save Credentials upon successful login */\nexport const setCredentials = createAction(LoginTypesNames.SET_CREDENTIALS, props<{ credentials: Credentials }>());\n\n/** Action to logout */\nexport const logout = createAction(LoginTypesNames.LOGOUT);\n","import { createReducer, on, createSelector } from '@ngrx/store';\r\nimport {setSelectedUser, setUser, setUsers} from './actions';\r\nimport {UserProfile, Users, UsersState} from './interfaces';\r\nimport { AppState } from './../interfaces.main';\r\n\r\nexport const initialState: UsersState = {\r\n  users: [],\r\n  user: {} as UserProfile,\r\n  selectedUser: {} as UserProfile\r\n};\r\n\r\nexport const setUsersReducer = createReducer(\r\n  initialState,\r\n  on(setUsers, (state, { users }) => ({ ...state, users: [...users] })),\r\n  on(setUser, (state, { user }) => ({ ...state, user: { ...user } })),\r\n  on(setSelectedUser, (state, { user }) => ({ ...state, selectedUser: { ...user } }))\r\n);\r\n\r\nexport const usersSelector = (state: AppState) => state.users;\r\n\r\nexport const selectUsers = createSelector<AppState, UsersState, Users>(\r\n  usersSelector,\r\n  (state: UsersState) => state.users\r\n);\r\n\r\nexport const selectUser = createSelector<AppState, UsersState, UserProfile>(\r\n  usersSelector,\r\n  (state: UsersState) => state.user\r\n);\r\n\r\nexport const selectSelectedUser = createSelector<AppState, UsersState, UserProfile>(\r\n  usersSelector,\r\n  (state: UsersState) => state.selectedUser\r\n);\r\n\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\nexport interface TableConfig<T>{\n  columns: Array<ColumnConfig<T>>;\n  data: Array<T>;\n}\n\nexport interface ColumnConfig<T>{\n  key: keyof T;\n  label: string;\n}\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\nexport class TableComponent implements OnInit {\n\n  @Input() config: TableConfig<any> | null;\n  @Output() rowSelected: EventEmitter<any> = new EventEmitter<any>();\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onRowSelected(row: any): void {\n    if (this.rowSelected) {\n      this.rowSelected.emit(row);\n    }\n  }\n\n}\n","<div *ngIf=\"config &&  config.data && config.data.length > 0\" class=\"data-table\">\n  <div class=\"data-row table-header\">\n    <div *ngFor=\"let col of config.columns\" class=\"data-cell\">\n      <div>{{col.label}}</div>\n    </div>\n  </div>\n  <div *ngFor=\"let row of config.data\" class=\"data-row\" (click)=\"onRowSelected(row)\">\n    <div *ngFor=\"let col of config.columns\" class=\"data-cell\">\n      <div>{{row[col.key]}}</div>\n    </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport {Observable, of, pipe} from 'rxjs';\r\nimport { catchError, filter, switchMap, take, tap } from 'rxjs/operators';\r\nimport {LoginFacadeService} from '../../facades/login.facade.service';\r\n\r\n// other imports\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private loginFacade: LoginFacadeService) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    return this.isAuthenticated().pipe(\r\n      switchMap((credentials) => of(true)),\r\n      catchError(\r\n        pipe(\r\n          tap( () => this.loginFacade.logout()),\r\n          () => of(false)\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  isAuthenticated(): Observable<any> {\r\n    return this.loginFacade.getCredentials().pipe(\r\n      filter((credentials) => credentials.login),\r\n      take(1)\r\n    );\r\n  }\r\n}\r\n","import { loginReducer } from './login/reducers';\r\nimport { ActionReducerMap } from '@ngrx/store';\r\nimport { AppState } from './interfaces.main';\r\nimport {setUsersReducer} from './user/reducers';\r\n\r\n\r\nexport const appReducers: ActionReducerMap<AppState, any> = {\r\n  login: loginReducer,\r\n  users: setUsersReducer,\r\n};\r\n\r\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {User, UserProfile, Users} from '../store/user/interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http: HttpClient) { }\n\n  login(email: string, password: string): Observable<UserProfile> {\n    return this.http.post<UserProfile>('api/login', { email, password });\n  }\n\n  signup(user: User): Observable<User> {\n    return this.http.post<User>('api/signup', { ...user });\n  }\n\n  getUserProfile(userId: string): Observable<UserProfile> {\n    return this.http.get<UserProfile>(`api/getUserProfile/${userId}`);\n  }\n\n  getUsers(): Observable<Users> {\n    return this.http.get<Users>('api/users');\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport {Actions, ofType, createEffect, Effect} from '@ngrx/effects';\r\nimport {catchError, exhaustMap, map, switchMap, tap} from 'rxjs/operators';\r\nimport {ApiService} from '../../services/api.service';\r\nimport {login, logout, setCredentials} from './actions';\r\nimport {EMPTY} from 'rxjs';\r\nimport {Router} from '@angular/router';\r\nimport {getUser, setUser} from '../user/actions';\r\nimport {UserProfile} from '../user/interfaces';\r\n\r\n@Injectable()\r\nexport class Effects {\r\n  login$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(login.type),\r\n      exhaustMap(({ email, password }) => this.apiService.login(email, password)),\r\n      switchMap(user => [\r\n        setCredentials({ credentials: { email: user.email, login: true } }),\r\n        setUser({ user }),\r\n        getUser({ id: user.email }),\r\n      ]),\r\n      catchError(() => EMPTY)\r\n    )\r\n  );\r\n\r\n  logout$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(logout.type),\r\n      switchMap(() => [\r\n        setCredentials({ credentials: { email: '', login: false } }),\r\n        setUser({ user: {} as UserProfile }),\r\n      ]),\r\n      tap(() => this.router.navigate(['/'])),\r\n      catchError(() => EMPTY)\r\n    )\r\n  );\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private apiService: ApiService,\r\n    private readonly router: Router,\r\n  ) {}\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {AppState} from '../store/interfaces.main';\nimport {Credentials, LoginTypesNames} from '../store/login/interfaces';\nimport {selectCredentials} from '../store/login/reducers';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginFacadeService {\n\n  constructor(private store: Store<AppState>) { }\n\n  login(email: string, password: string): void {\n    this.store.dispatch({ type: LoginTypesNames.LOGIN, email, password });\n  }\n\n  logout(): void {\n    this.store.dispatch( { type: LoginTypesNames.LOGOUT});\n  }\n\n  getCredentials(): Observable<Credentials> {\n    return this.store.pipe(select(selectCredentials));\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Actions, ofType, createEffect } from '@ngrx/effects';\r\nimport {exhaustMap, map, mergeMap, tap} from 'rxjs/operators';\r\nimport {ApiService} from '../../services/api.service';\r\nimport {getUser, getUsers, saveUser, setSelectedUser, setUser, setUsers} from './actions';\r\nimport {Router} from '@angular/router';\r\n\r\n@Injectable()\r\nexport class UsersEffects {\r\n  getUsers$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(getUsers.type),\r\n      mergeMap(() =>\r\n        this.apiService.getUsers().pipe(\r\n          map(users => setUsers({ users }))/*,\r\n          catchError(error => of(AuthApiActions.loginFailure({ error })))*/\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  getUser$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(getUser.type),\r\n      mergeMap(({ id }) =>\r\n        this.apiService.getUserProfile(id).pipe(\r\n          map(user => setSelectedUser({ user })),\r\n          tap(() => this.router.navigate(['dashboard']))\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  saveUser$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(saveUser.type),\r\n      mergeMap(({ user }) =>\r\n        this.apiService.signup(user).pipe(\r\n          map(id => setUser({ user })),\r\n          tap(() => this.router.navigate(['/'])),\r\n          /*,\r\n          catchError(error => of(AuthApiActions.loginFailure({ error })))*/\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private apiService: ApiService,\r\n    private readonly router: Router,\r\n  ) {}\r\n}\r\n","import {Effects} from './login/effects';\r\nimport {UsersEffects} from './user/effects';\r\n\r\nexport const appEffects = [\r\n  Effects,\r\n  UsersEffects\r\n];\r\n","import { Component, OnInit } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {LoginFacadeService} from '../../facades/login.facade.service';\nimport {UserFacadeService} from '../../facades/user.facade.service';\nimport {UserProfile} from '../../store/user/interfaces';\nimport {Credentials} from '../../store/login/interfaces';\n\n@Component({\n  selector: 'app-navigation-bar',\n  templateUrl: './navigation-bar.component.html',\n  styleUrls: ['./navigation-bar.component.scss']\n})\nexport class NavigationBarComponent implements OnInit {\n\n  constructor( private loginFacade: LoginFacadeService, private userFacade: UserFacadeService) { }\n\n  ngOnInit(): void {}\n\n  get currentUser(): Observable<UserProfile> {\n    return this.userFacade.getCurrentUser();\n  }\n\n  get credentials(): Observable<Credentials> {\n    return this.loginFacade.getCredentials();\n  }\n\n  logout(): void {\n    this.loginFacade.logout();\n  }\n\n}\n","<nav class=\"navbar navbar-expand navbar-dark navigation-bar\">\n  <div class=\"navbar-nav\" *ngIf=\"(credentials | async)!.login; else logoutNanv\">\n    <a class=\"nav-item nav-link\" (click)=\"logout()\">Logout</a>\n    <a class=\"nav-item nav-link\" routerLink=\"/dashboard\" routerLinkActive=\"active\">Dashboard</a>\n    <a class=\"nav-item nav-link\" routerLink=\"/users\" routerLinkActive=\"active\">Users</a>\n    <span class=\"hello-user\">Hello {{(currentUser | async)!.firstName}} !</span>\n  </div>\n</nav>\n<ng-template #logoutNanv>\n  <div class=\"navbar-nav\">\n  <a class=\"nav-item nav-link\" routerLink=\"/login\" routerLinkActive=\"active\" >Login</a>\n  <a class=\"nav-item nav-link\" routerLink=\"/signup\" routerLinkActive=\"active\">Signup</a>\n    <a class=\"nav-item nav-link\" routerLink=\"/users\" routerLinkActive=\"active\">Users</a>\n  </div>\n</ng-template>\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-section',\n  templateUrl: './section.component.html',\n  styleUrls: ['./section.component.scss']\n})\nexport class SectionComponent implements OnInit {\n\n  @Input() limitedWidth = true;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"section-container\" [ngClass]=\"{'limited': limitedWidth}\" >\n  <div class=\"section-title\">\n    <ng-content select=\"[header]\"></ng-content>\n  </div>\n  <ng-content select=\"[body]\"></ng-content>\n</div>\n","import { Injectable } from '@angular/core';\n\nexport type Errors = {\n  [key: string]: string;\n};\n\nconst ErrorMessages: Errors = {\n  required: 'Required field.',\n  email: 'Email is invalid.'\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorMessageService {\n  constructor() { }\n\n  getMessage(errorObject: any): string {\n    const [key] = Object.keys(errorObject);\n    return ErrorMessages[key];\n  }\n}\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  constructor() {}\n\n  ngOnInit(): void {}\n\n}\n","<div class=\"app-container\">\n  <app-navigation-bar></app-navigation-bar>\n  <div class=\"outlet-container\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport {ErrorMessageService} from '../../services/error-message.service';\nimport {LoginFacadeService} from '../../facades/login.facade.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  login: FormGroup;\n  isSubmitted = false;\n  constructor(\n    private fb: FormBuilder,\n    private errorMsg: ErrorMessageService,\n    private loginFacade: LoginFacadeService\n  ) { }\n\n  ngOnInit(): void {\n    this.login = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]]\n    });\n  }\n\n  onSubmit({ value: { email, password  }, valid }: { value: { email: string, password: string  }, valid: boolean }): void {\n    this.isSubmitted = true;\n    if (!valid) {\n      return;\n    }\n    this.loginFacade.login(email, password);\n  }\n\n  showError(fieldName: string): boolean | undefined {\n    return (this.isSubmitted && this.login.get(fieldName)?.invalid) || this.login.get(fieldName)?.touched;\n  }\n\n  getValidationMessage(fieldName: string): string {\n    return this.login.get(fieldName)?.errors ? this.errorMsg.getMessage(this.login.get(fieldName)?.errors) : '';\n  }\n\n}\n","<div class=\"login-container\">\n  <div class=\"login-header\">Login</div>\n  <form class=\"form-login\" novalidate  (ngSubmit)=\"onSubmit(login)\" [formGroup]=\"login\">\n    <div class=\"form-field\">\n      <label for=\"email-field\" class=\"form-label\">Email address</label>\n      <input type=\"email\" class=\"form-control\" id=\"email-field\" formControlName=\"email\" aria-describedby=\"emailHelp\">\n      <ng-container *ngIf=\"showError('email')\">\n        <span class=\"invalid-feedback failed\">{{getValidationMessage('email')}}</span>\n      </ng-container>\n    </div>\n    <div class=\"form-field\">\n      <label for=\"password-field\" class=\"form-label\">Password</label>\n      <input type=\"password\" class=\"form-control\" formControlName=\"password\" id=\"password-field\">\n      <ng-container *ngIf=\"showError('password')\">\n        <span class=\"invalid-feedback failed\">{{getValidationMessage('password')}}</span>\n      </ng-container>\n    </div>\n    <button type=\"submit\" class=\"btn submit-btn-form\">Login</button>\n  </form>\n  <div class=\"additional-actions\">\n    <a class=\"nav-item nav-link-signup\" routerLink=\"/signup\" routerLinkActive=\"active\">Forgot your Password ?</a>\n    <a class=\"nav-item nav-link-signup\" routerLink=\"/signup\" routerLinkActive=\"active\">SignUp</a>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {ColumnConfig, TableConfig} from '../../components/table/table.component';\nimport {map} from 'rxjs/operators';\nimport {UserFacadeService} from '../../facades/user.facade.service';\nimport {User} from '../../store/user/interfaces';\n\nconst columns: Array<ColumnConfig<User>> = [\n  { key: 'firstName', label: 'First Name' },\n  { key: 'lastName', label: 'Last Name' },\n  { key: 'email', label: 'Email' }\n];\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit {\n  constructor(private userFacade: UserFacadeService) { }\n\n  ngOnInit(): void {\n    this.userFacade.fetchAllUsers();\n  }\n\n  get config(): Observable<TableConfig<User>> {\n    return this.userFacade.getAllUsers().pipe(\n      map( (data) => ({ data, columns }) as TableConfig<User>));\n  }\n\n  onUserSelect(user: User): void {\n    this.userFacade.fetchSelectedUser(user.email);\n  }\n}\n","<app-section>\n  <div class=\"section-header\" header>\n    Users\n  </div>\n  <app-table [config]=\"config | async\" (rowSelected)=\"onUserSelect($event)\" body></app-table>\n</app-section>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\nimport { EffectsModule } from '@ngrx/effects';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport { LoginComponent } from './containers/login/login.component';\nimport { SectionComponent } from './components/section/section.component';\nimport { NavigationBarComponent } from './containers/navigation-bar/navigation-bar.component';\nimport { TableComponent } from './components/table/table.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FontAwesomeModule, FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\nimport {ApiInterceptor} from './base/auth-base/api.interceptor';\nimport {UsersComponent} from './containers/users/users.component';\nimport {SignupComponent} from './containers/signup/signup.component';\nimport {DashboardComponent} from './containers/dashboard/dashboard.component';\nimport {appEffects} from './store/effects.main';\nimport {appReducers} from './store/reducers.main';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    UsersComponent,\n    SignupComponent,\n    SectionComponent,\n    NavigationBarComponent,\n    TableComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FontAwesomeModule,\n    StoreModule.forRoot( appReducers),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n    EffectsModule.forRoot(appEffects)\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: ApiInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor(library: FaIconLibrary) {\n    library.addIcons(faUser);\n  }\n}\n","import { Action, createReducer, on, createSelector } from '@ngrx/store';\r\nimport { login, setCredentials } from './actions';\r\nimport {Credentials, LoginState} from './interfaces';\r\nimport {ActionReducer} from '@ngrx/store/src/models';\r\nimport { AppState } from './../interfaces.main';\r\n\r\nexport const initialState: LoginState = {\r\n  credentials: {\r\n    email: '',\r\n    login: false\r\n  }\r\n};\r\n\r\nexport const loginReducer = createReducer(\r\n  initialState,\r\n  on(setCredentials, (state, { credentials }) => ({ ...state, credentials: { ...credentials } }))\r\n);\r\n\r\nexport const credentialsSelector = (state: AppState) => state.login;\r\n\r\nexport const selectCredentials = createSelector<AppState, LoginState, Credentials>(\r\n  credentialsSelector,\r\n  (state: LoginState) => state.credentials\r\n);\r\n","export interface UsersState {\r\n  users: Users;\r\n  user: UserProfile;\r\n  selectedUser: UserProfile;\r\n}\r\n\r\nexport interface User {\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  id: string;\r\n}\r\n\r\nexport interface UserProfile extends User{\r\n  age: number;\r\n  password: string;\r\n}\r\n\r\nexport type Users = Array<Partial<User>>;\r\n\r\nexport enum UsersTypesNames {\r\n  GET_USERS = '[Users Page] Get Users', // handled by effect\r\n  SET_USERS = '[Users Page] Set Users',\r\n  GET_USER_PROFILE = '[Dashboard Page] Get User', // handled by effect\r\n  SET_USER_PROFILE = '[Dashboard Page] Set User to Store',\r\n  SAVE_USER_PROFILE = '[Signup Page] Save New User', // handled by effect\r\n  SET_SELECTED_USER = '[Dashboard Page] Set Selected user to the store'\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport {first, switchMap} from 'rxjs/operators';\r\nimport {LoginFacadeService} from '../../facades/login.facade.service';\r\n\r\n@Injectable()\r\nexport class ApiInterceptor implements HttpInterceptor {\r\n  constructor(private loginFacade: LoginFacadeService) { }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    // add here any global headers like JWT toke\r\n    return this.loginFacade.getCredentials().pipe(\r\n      first(),\r\n      switchMap( cred => {\r\n        const authReq = cred.login ? request.clone({\r\n          setHeaders: { Authorization: 'Bearer fakeJwToke' },\r\n        }) : request;\r\n        return next.handle(authReq);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {AppState} from '../store/interfaces.main';\nimport {User, UserProfile, Users, UsersTypesNames} from '../store/user/interfaces';\nimport {selectSelectedUser, selectUser, selectUsers} from '../store/user/reducers';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserFacadeService {\n\n  constructor(private store: Store<AppState>) { }\n\n  getCurrentUser(): Observable<UserProfile> {\n    return this.store.pipe(select(selectUser));\n  }\n\n  getSelectedUser(): Observable<UserProfile> {\n    return this.store.pipe(select(selectSelectedUser));\n  }\n\n  saveUserProfile(user: User): void {\n    this.store.dispatch({ type: UsersTypesNames.SAVE_USER_PROFILE, user });\n  }\n\n  fetchAllUsers(): void {\n    this.store.dispatch({ type: UsersTypesNames.GET_USERS });\n  }\n\n  fetchSelectedUser(id: string): void {\n    this.store.dispatch({ type: UsersTypesNames.GET_USER_PROFILE, id});\n  }\n\n  getAllUsers(): Observable<Users> {\n    return this.store.pipe(select(selectUsers));\n  }\n}\n","export interface LoginState {\r\n  credentials: Credentials;\r\n}\r\n\r\nexport interface Credentials {\r\n  email: string;\r\n  login: boolean;\r\n}\r\n\r\nexport enum LoginTypesNames {\r\n  LOGIN = '[Login Page] Login',\r\n  SET_CREDENTIALS = '[Login Page] Set Credentials',\r\n  LOGOUT = '[Login Page] logout the system',\r\n  ONLOGIN = '[Login Page] On Login',\r\n};\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {AuthGuard} from './base/auth-base/auth.guard';\nimport {DashboardComponent} from './containers/dashboard/dashboard.component';\nimport {UsersComponent} from './containers/users/users.component';\nimport {SignupComponent} from './containers/signup/signup.component';\nimport {LoginComponent} from './containers/login/login.component';\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent },\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard] },\n  { path: 'users', component: UsersComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: '**', component: LoginComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ErrorMessageService} from '../../services/error-message.service';\nimport {UserFacadeService} from '../../facades/user.facade.service';\nimport {User} from '../../store/user/interfaces';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  signup: FormGroup;\n  isSubmitted = false;\n  constructor(\n    private fb: FormBuilder,\n    private errorMsg: ErrorMessageService,\n    private userFacade: UserFacadeService\n  ) { }\n\n  ngOnInit(): void {\n    this.signup = this.fb.group({\n      firstName: ['', [Validators.required]],\n      lastName: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      age: ['', [Validators.required]],\n      password: ['', [Validators.required]]\n    });\n  }\n\n  onSubmit({ value: user, valid }: { value: User, valid: boolean }): void {\n    this.isSubmitted = true;\n    if (!valid) {\n      return;\n    }\n    this.userFacade.saveUserProfile(user);\n  }\n\n  showError(fieldName: string): boolean | undefined {\n    return (this.isSubmitted && this.signup.get(fieldName)?.invalid) || this.signup.get(fieldName)?.touched;\n  }\n\n  getValidationMessage(fieldName: string): string {\n    return this.signup.get(fieldName)?.errors ? this.errorMsg.getMessage(this.signup.get(fieldName)?.errors) : '';\n  }\n\n}\n","<div class=\"signup-container\">\n  <div class=\"signup-header\">Signup</div>\n  <form class=\"signup-form\" novalidate  (ngSubmit)=\"onSubmit(signup)\" [formGroup]=\"signup\">\n    <div class=\"form-field\">\n      <label for=\"firstName-field\" class=\"form-label\">First name</label>\n      <input type=\"firstName\" class=\"form-control\" id=\"firstName-field\" formControlName=\"firstName\">\n      <ng-container *ngIf=\"showError('firstName')\">\n        <span class=\"invalid-feedback failed\">{{getValidationMessage('firstName')}}</span>\n      </ng-container>\n    </div>\n    <div class=\"form-field\">\n      <label for=\"lastName\" class=\"form-label\">Last name</label>\n      <input type=\"lastName\" class=\"form-control\" id=\"lastName\" formControlName=\"lastName\">\n      <ng-container *ngIf=\"showError('lastName')\">\n        <span class=\"invalid-feedback failed\">{{getValidationMessage('lastName')}}</span>\n      </ng-container>\n    </div>\n    <div class=\"form-field\">\n      <label for=\"email\" class=\"form-label\">Email address</label>\n      <input type=\"email\" class=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" formControlName=\"email\">\n      <ng-container *ngIf=\"showError('email')\">\n        <span class=\"invalid-feedback failed\">{{getValidationMessage('email')}}</span>\n      </ng-container>\n    </div>\n    <div class=\"form-field\">\n      <label for=\"age\" class=\"form-label\">Age</label>\n      <input type=\"age\" class=\"form-control\" id=\"age\" formControlName=\"age\">\n      <ng-container *ngIf=\"showError('age')\">\n        <span class=\"invalid-feedback failed\">{{getValidationMessage('age')}}</span>\n      </ng-container>\n    </div>\n    <div class=\"form-field\">\n      <label for=\"password\" class=\"form-label\">Password</label>\n      <input type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\">\n      <ng-container *ngIf=\"showError('password')\">\n        <span class=\"invalid-feedback failed\">{{getValidationMessage('password')}}</span>\n      </ng-container>\n    </div>\n    <button type=\"submit\" class=\"btn submit-btn-form\">Signup</button>\n  </form>\n  <div class=\"additional-actions\">\n    <a class=\"nav-item nav-link-signup\" routerLink=\"/login\" routerLinkActive=\"active\">Already a member ? Login</a>\n  </div>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}